[tools]
java = "21"
mvnd = "1.0.3"
jq = "1.8.1"
docker-compose = "2.39.4"
kubectl = "1.34.1"
docker-cli = "28.4.0"
helm = "3.19.0"
kubectx = "0.9.5"
kubens = "0.9.5"
minikube = "1.37.0"

[tasks."initialization:project"]
description = "Initializes the entire project environment by executing the following subtasks:"
run = [
  { task = "initialization:code" },
  { task = "initialization:cluster" },
  { task = "initialization:build:code" },
]

[tasks."destruction:all"]
description = "Completely removes the development environment:"
run = [
  { tasks = [ "cluster:destroy", "cluster:forward-node-down", "zscaler:remove-jdk" ] },
]

[tasks."initialization:build:code"]
description = "Builds all projects without executing tests using Maven (`mvnd`)."
run = [
  { task = "code:build:no-test" },
]

[tasks."initialization:code"]
description = "initializes git submodules and updates all projects."
run = [
  { task = "git:init" },
  { task = "git:update-all" },
]

[tasks."initialization:cluster"]
description = "creates the Minikube cluster, configures port forwarding, and installs or upgrades the authority chart."
run = [
  { task = "cluster:create" },
  { task = "cluster:forward-node-up" },
  { task = "cluster:authority-install-or-upgrade" },
]

[tasks."initialization:zscaler"]
description = "Configures the environment for Z-Scaler certificates:"
run = [
  { tasks = [ "zscaler:install-jdk", "zscaler:install-cluster" ] }
]

[tasks."jqlog"]
description = "formats JSON log output to a readable line-by-line format using `jq`."
run = """
jq --unbuffered -r -R '. as $line | try (fromjson | "\\(.timestamp) \\(.micro // "") \\(.level) \\(.message) \\(."error.stack_trace" // "")") catch $line'
"""

[tasks."code:fmt"]
description = "formats the code using Spotless."
run = "mvnd -f simpl-repo spotless:apply"

[tasks."code:build"]
description = "builds all projects with Maven, including tests."
run = "mvnd -Dmvnd.connectTimeout=100000 clean install -fae -f simpl-repo/"

[tasks."code:build:no-test"]
description = "builds all projects but skips tests and license downloads."
run = "mise run code:build --fail-never -Dlicense.skipDownloadLicenses -Dmaven.test.skip"

[tasks."code:test-automation:run-by-tag"]
description = "runs automation tests filtered by Cucumber tags."
run = "mvnd -f simpl-repo/test-automation resources:resources resources:testResources compiler:compile compiler:testCompile surefire:test -Dcucumber.filter.tags={{arg(name=\"tags\")}}"

[tasks."cluster:forward-node-compose"]
description = "runs the Docker Compose file for port forwarding."
run = "docker-cli-plugin-docker-compose -f .config/docker/forward-node/docker-compose.yaml -p simpl-portforward"

[tasks."cluster:forward-node-up"]
description = "starts port forwarding services."
run = "mise r cluster:forward-node-compose up -d"

[tasks."cluster:forward-node-down"]
description = "shuts down all port forwards."
run = "mise r cluster:forward-node-compose down -v"

[tasks."cluster:create"]
description = "starts Minikube with a dedicated Docker network and profile."
run = "minikube start --network=simpl-network --driver=docker --profile=simpl-control-plane"

[tasks."cluster:destroy"]
description = "deletes the Minikube cluster."
run = "minikube delete --profile=simpl-control-plane"

[tasks."cluster:start"]
description = "starts the Minikube cluster and sets up port forwarding."
run = [
  "minikube start --network=simpl-network --driver=docker --profile=simpl-control-plane",
  { task = "cluster:forward-node-up" },
]

[tasks."cluster:status"]
description = "shows the status of the Minikube cluster."
run = "minikube status --profile=simpl-control-plane"

[tasks."cluster:stop"]
description = "stops the Minikube cluster and disables port forwarding."
run = [
  { task = "cluster:forward-node-down" },
  "minikube stop --profile=simpl-control-plane"
]

[tasks."cluster:bash"]
description = "opens a shell inside the Minikube control plane container."
run = "docker exec -it simpl-control-plane bash"

[tasks."cluster:authority-install-or-upgrade"]
description = "installs or upgrades the local authority Helm chart and switches namespace."
run = [
  """
  helm upgrade \
  -i \
  --dependency-update \
  --create-namespace \
  -n local-authority \
  local-authority \
  ./simpl-repo/charts/app-values/local/local-authority
  """,
 "kubens local-authority"
]

[tasks."cluster:authority-uninstall"]
description = "uninstalls the authority Helm chart."
run = "helm uninstall local-authority"

[tasks."zscaler:install-cluster"]
description = "installs Z-Scaler certificates inside the Minikube cluster."
run = [
  "docker cp .config/certs/zscaler-ca.pem simpl-control-plane:usr/local/share/ca-certificates/zscaler-ca.crt",
  "docker exec simpl-control-plane update-ca-certificates",
]

[tasks."git:init"]
description = "initializes git submodules."
run = "git submodule init"

[tasks."git:update-all"]
description = "updates all submodules recursively to the latest remote commits."
run = "git submodule update --remote --recursive"

[tasks."micro:run:authority-authenticationprovider".env]
SPRING_PROFILES_ACTIVE = "local-authority"
CRYPTO_SECRETKEYBASE64 = "KdSucCE6DSRFThqxv2frvx1h84HPFEy4ocEFwFDJC8A"
[tasks."micro:run:authority-authenticationprovider"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :authenticationprovider spring-boot:run"

[tasks."micro:run:consumer-authenticationprovider".env]
SPRING_PROFILES_ACTIVE = "local-consumer"
CRYPTO_SECRETKEYBASE64 = "KdSucCE6DSRFThqxv2frvx1h84HPFEy4ocEFwFDJC8A"
[tasks."micro:run:consumer-authenticationprovider"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :authenticationprovider spring-boot:run"

[tasks."micro:run:authority-identityprovider".env]
SPRING_PROFILES_ACTIVE = "local"
[tasks."micro:run:authority-identityprovider"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :identity-provider spring-boot:run"

[tasks."micro:run:authority-onboarding".env]
SPRING_PROFILES_ACTIVE = "local"
[tasks."micro:run:authority-onboarding"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :onboarding spring-boot:run"

[tasks."micro:run:authority-securityattributesprovider".env]
SPRING_PROFILES_ACTIVE = "local"
[tasks."micro:run:authority-securityattributesprovider"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :security-attributes-provider spring-boot:run"

[tasks."micro:run:authority-tierone".env]
SPRING_PROFILES_ACTIVE = "local-authority"
[tasks."micro:run:authority-tierone"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :tier1-gateway spring-boot:run"

[tasks."micro:run:consumer-tierone".env]
SPRING_PROFILES_ACTIVE = "local-consumer"
[tasks."micro:run:consumer-tierone"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :tier1-gateway spring-boot:run"

[tasks."micro:run:authority-tiertwo".env]
SPRING_PROFILES_ACTIVE = "local-authority"
[tasks."micro:run:authority-tiertwo"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :tier2-gateway spring-boot:run"

[tasks."micro:run:consumer-tiertwo".env]
SPRING_PROFILES_ACTIVE = "local-consumer"
[tasks."micro:run:consumer-tiertwo"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :tier2-gateway spring-boot:run"

[tasks."micro:run:authority-usersroles".env]
SPRING_PROFILES_ACTIVE = "local-authority"
[tasks."micro:run:authority-usersroles"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :usersroles spring-boot:run"

[tasks."micro:run:consumer-usersroles".env]
SPRING_PROFILES_ACTIVE = "local-consumer"
[tasks."micro:run:consumer-usersroles"]
run = "mvnd -Dmvnd.connectTimeout=100000 -f simpl-repo -pl :usersroles spring-boot:run"

[tasks."zscaler:install-jdk"]
description = "imports Z-Scaler CA into the Java keystore."
run = "keytool -importcert -trustcacerts -alias zscaler-ca -file .config/certs/zscaler-ca.pem -keystore {{env.JAVA_HOME}}/lib/security/cacerts -storepass changeit -noprompt"

[tasks."zscaler:remove-jdk"]
description = "removes the Z-Scaler CA from the Java keystore."
run = "keytool -delete -alias zscaler-ca -keystore {{env.JAVA_HOME}}/lib/security/cacerts -storepass changeit"

[env]
PROJECT_RELEASE_VERSION = "2.5.0-RC"
KUBECONFIG = "./.config/.kube/config"

#Database
SIMPL_DB_PORT_FORWARD = "55432"
