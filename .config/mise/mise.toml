[tools]
java = "21"
"github:Pumahawk/klog" = "0.1.0"
mvnd = "1.0.3"
jq = "1.8.1"
docker-compose = "2.39.4"
kind = "0.30.0"
kubectl = "1.34.1"
docker-cli = "28.4.0"
helm = "3.19.0"

[tasks.jqlog]
run = """
jq --unbuffered -r -R '. as $line | try (fromjson | "\\(.timestamp) \\(.micro // "") \\(.level) \\(.message) \\(."error.stack_trace" // "")") catch $line'
"""

[tasks.build]
run = "mvnd clean install -fae -f simpl-repo/"

[tasks.fmt]
run = "mvnd -f simpl-repo spotless:apply"

[tasks."build:no-test"]
run = "mise run build -Dmaven.test.skip"

[tasks.dockerc]
run = "docker-cli-plugin-docker-compose -f .config/docker/docker-compose.yaml -p simpl-dev"

[tasks."dockerc:up"]
run = "mise r dockerc up -d"

[tasks."dockerc:stop"]
run = "mise r dockerc stop"

[tasks."db"]
run = "mise r dockerc ps db -a"

[tasks."db:up"]
run = "mise r dockerc:up db"

[tasks."db:stop"]
run = "mise r dockerc:stop db"

[tasks."db:prune"]
run = "mise r dockerc down db -v"

[tasks."db:connect"]
run = "mise run dockerc exec db psql --host localhost -U admin"

[tasks.cluster]
run = "kubectl"

[tasks."cluster:create"]
run = "kind create cluster --name simpl"

[tasks."cluster:destroy"]
run = "kind delete cluster --name simpl"

[tasks."cluster:start"]
run = "docker container start simpl-control-plane"

[tasks."cluster:status"]
run = "docker container ls -a --filter name=simpl-control-plane"

[tasks."cluster:stop"]
run = "docker container stop simpl-control-plane"

[tasks."cluster:connect"]
run = "docker exec -it simpl-control-plane bash"

[tasks."cluster:authority-install"]
run = """
  helm upgrade \
  -i \
  --dependency-update \
  --create-namespace \
  -n local-authority \
  local-authority \
  ./simpl-repo/charts/app-values/local/local-authority
"""

[tasks."cluster:authority-uninstall"]
run = "helm uninstall local-authority"

[tasks."cluster:install-zscaler-ca"]
run = [
  "docker cp .config/certs/zscaler-ca.pem simpl-control-plane:usr/local/share/ca-certificates/zscaler-ca.crt",
  "docker exec simpl-control-plane update-ca-certificates",
]

[tasks.ksil]
run = "klog --config script/klog-conf.yaml --kubeconfig \"{{env.KUBECONFIG}}\""

[tasks."run:onboarding".env]
SPRING_DATASOURCE_URL = "{{env.MICRO_ONBOARDING_DB_URL}}"
SPRING_DATASOURCE_USERNAME = "{{env.MICRO_ONBOARDING_DB_USERNAME}}"
SPRING_DATASOURCE_PASSWORD = "{{env.MICRO_ONBOARDING_DB_PASSWORD}}"

[tasks."run:onboarding"]
run = "mvnd -f simpl-repo/onboarding/ -Dmaven.test.skip spring-boot:run -Dspring-boot.run.profiles=\"{{env.MICRO_PROFILES}}\""

[tasks."run:authentication-provider".env]
SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI = "{{env.MICRO_AUTH_ISSUER_URI}}"
CRYPTO_SECRETKEYBASE64 = "{{env.MICRO_AUTH_SECKEY}}"
SPRING_DATASOURCE_URL = "{{env.MICRO_AUTH_DB_URL}}"
SPRING_DATASOURCE_USERNAME = "{{env.MICRO_AUTH_DB_USERNAME}}"
SPRING_DATASOURCE_PASSWORD = "{{env.MICRO_AUTH_DB_PASSWORD}}"

[tasks."run:authentication-provider"]
run = "mvnd -f simpl-repo/agent-service/ -Dmaven.test.skip spring-boot:run -Dspring-boot.run.profiles=\"{{env.MICRO_PROFILES}}\""

[tasks."run:identity-provider".env]
SPRING_DATASOURCE_URL = "{{env.MICRO_IDENTITY_DB_URL}}"
SPRING_DATASOURCE_USERNAME = "{{env.MICRO_IDENTITY_DB_USERNAME}}"
SPRING_DATASOURCE_PASSWORD = "{{env.MICRO_IDENTITY_DB_PASSWORD}}"
SPRING_SSL_BUNDLE_JKS_EJBCA_KEYSTORE_LOCATION = "{{env.MICRO_IDENTITY_EJBCA_KEYSTORE_LOCATION}}"
SPRING_SSL_BUNDLE_JKS_EJBCA_KEYSTORE_PASSWORD = "{{env.MICRO_IDENTITY_EJBCA_KEYSTORE_PASSWORD}}"
SPRING_SSL_BUNDLE_JKS_EJBCA_KEYSTORE_TYPE = "{{env.MICRO_IDENTITY_EJBCA_KEYSTORE_TYPE}}"
SPRING_SSL_BUNDLE_JKS_EJBCA_TRUSTSTORE_LOCATION = "{{env.MICRO_IDENTITY_EJBCA_TRUSTSTORE_LOCATION}}"
SPRING_SSL_BUNDLE_JKS_EJBCA_TRUSTSTORE_PASSWORD = "{{env.MICRO_IDENTITY_EJBCA_TRUSTSTORE_PASSWORD}}"
SPRING_SSL_BUNDLE_JKS_EJBCA_TRUSTSTORE_TYPE = "{{env.MICRO_IDENTITY_EJBCA_TRUSTSTORE_TYPE}}"

[tasks."run:identity-provider"]
run = "mvnd -f simpl-repo/identity-provider/ -Dmaven.test.skip spring-boot:run -Dspring-boot.run.profiles=\"{{env.MICRO_PROFILES}}\""

[tasks."run:security-attributes-provider".env]
SPRING_DATASOURCE_URL = "{{env.MICRO_SAP_DB_URL}}"
SPRING_DATASOURCE_USERNAME = "{{env.MICRO_SAP_DB_USERNAME}}"
SPRING_DATASOURCE_PASSWORD = "{{env.MICRO_SAP_DB_PASSWORD}}"

[tasks."run:security-attributes-provider"]
run = "mvnd -f simpl-repo/security-attributes-provider/ -Dmaven.test.skip spring-boot:run -Dspring-boot.run.profiles=\"{{env.MICRO_PROFILES}}\""

[tasks."run:tier1-gateway".env]
GATEWAY_URL = "{{env.MICRO_TIER1_GATEWAY_URL}}"
KEYCLOAK_APP_REALM = "{{env.MICRO_TIER1_REALM}}"

[tasks."run:tier1-gateway"]
run = "mvnd -f simpl-repo/simpl-cloud-gateway/ -Dmaven.test.skip spring-boot:run -Dspring-boot.run.profiles=\"{{env.MICRO_PROFILES}}\""

[tasks."run:users-roles".env]
SPRING_DATASOURCE_URL = "{{env.MICRO_USERSROLES_DB_URL}}"
SPRING_DATASOURCE_USERNAME = "{{env.MICRO_USERSROLES_DB_USERNAME}}"
SPRING_DATASOURCE_PASSWORD = "{{env.MICRO_USERSROLES_DB_PASSWORD}}"

[tasks."run:users-roles"]
run = "mvnd -f simpl-repo/users-roles/ -Dmaven.test.skip spring-boot:run -Dspring-boot.run.profiles=\"{{env.MICRO_PROFILES}}\""

[env]
PROJECT_RELEASE_VERSION = "2.5.0-RC"
KUBECONFIG = "./.config/.kube/config"

#Database
SIMPL_DB_PORT_FORWARD = "5432"

# Microservices
MICRO_PROFILES = "local,authority,local-authority"

MICRO_ONBOARDING_DB_URL = "jdbc:postgresql://localhost:5432/onboarding"
MICRO_ONBOARDING_DB_USERNAME = "onboarding"
MICRO_ONBOARDING_DB_PASSWORD = "onboarding"

MICRO_USERSROLES_DB_URL = "jdbc:postgresql://localhost:5432/usersroles"
MICRO_USERSROLES_DB_USERNAME = "usersroles"
MICRO_USERSROLES_DB_PASSWORD = "usersroles"

MICRO_SAP_DB_URL = "jdbc:postgresql://localhost:5432/securityattributesprovider"
MICRO_SAP_DB_USERNAME = "securityattributesprovider"
MICRO_SAP_DB_PASSWORD = "securityattributesprovider"

MICRO_AUTH_ISSUER_URI = "http://localhost:9010/auth/realms/authority"
MICRO_AUTH_SECKEY = "WTJNbjN4enZCYXViU0FzYUtNUHVzc0UyNkhWT3dYYlI2ZHBLZDZWQVliMD0="
MICRO_AUTH_DB_URL = "jdbc:postgresql://localhost:5432/authenticationprovider"
MICRO_AUTH_DB_USERNAME = "authenticationprovider"
MICRO_AUTH_DB_PASSWORD = "authenticationprovider"

MICRO_IDENTITY_DB_URL = "jdbc:postgresql://localhost:5432/identityprovider"
MICRO_IDENTITY_DB_USERNAME = "identityprovider"
MICRO_IDENTITY_DB_PASSWORD = "identityprovider"
MICRO_IDENTITY_EJBCA_KEYSTORE_LOCATION = "file:/home/lgandino/projects/simpl-certs/identity-provider/keystore.p12"
MICRO_IDENTITY_EJBCA_KEYSTORE_PASSWORD = "123-stella"
MICRO_IDENTITY_EJBCA_KEYSTORE_TYPE = "PKCS12"
MICRO_IDENTITY_EJBCA_TRUSTSTORE_LOCATION = "file:/home/lgandino/projects/simpl-certs/identity-provider/truststore.jks"
MICRO_IDENTITY_EJBCA_TRUSTSTORE_PASSWORD = "changeit"
MICRO_IDENTITY_EJBCA_TRUSTSTORE_TYPE = "JKS"

# MICRO_TIER1_GATEWAY_URL = "http://localhost:9010"
# MICRO_TIER1_REALM = "authority"
